#!/bin/bash
e="\x1b[";c=$e"39;49;00m";y=$e"93;01m";r=$e"1;91m";g=$e"92;01m";cy1=$e"96;01m";m1=$e"95;01m";
r="\033[1;31m"
w = "\033[0m"
n="\e[0m"
poster() {
echo -e "" 
echo -e $y"    M                         M" 
echo -e "   MMMM                     MMMM" 
echo -e "  MMMMMM8     ONMMMNO     8MMMMMM" 
echo -e "   MMMMMMZMMMMMMMMMMMMMMM8MMMMMM" 
echo -e "    MMMMMMMMMMMMMMMMMMMMMMMMMMM" 
echo -e "     MMMMMMMMMMMMMMMMMMMMMMMMM" 
echo -e "      MMMMMMMMMM**MMMMMMMMMMM   Xiaomi Flash Tool" 
echo -e "    OMMMMMMMMMN****NMMMMMMMMMD    by IceMan" 
echo -e "     MMMMMMMMMMM**MMMMMMMMMMM    Mod by Ripunk" 
echo -e "     MMMMMMMMMMMMMMMMMMMMMMMM  YouTube Channel Ripunk" 
echo -e $r"    NMM-M...M=MM===MM=M...M-MM                      v.1.0" 
echo -e "    NMM-M...M-MM---MM-M...M-MM" 
echo -e "    MMM-MM.MM-MNMMMMM-MM.MM-MMM" 
echo -e "    MMMM-MM-7NMMMMMMMMZ-MM-7MMM" 
echo -e $y"    NMMMMMMMMMMMMMMMMMMMMMMMMMM" 
echo -e "     NMM7MMMMMMMMMMMMMMMMM7MMD" 
echo -e "            MMMMMMMMMMM" 
echo -e "            MMMZ777OMMM" 
echo -e "                 M" 
echo -e "                 M" 
echo -e "                MMM" 
echo -e "                MMM" 
echo -e "                878" 
echo -e "                 1"$n
echo -e " "==========================================================================================" 
}

navbar_reboot() {
echo -e "
"=========================================================================================="
  C- $y$t_Reboot_normal$c  |  G- $y$t_Reboot_recovery$c  |  Y- $y$t_Reboot_bootloader$c  |  K- $y EDL mode$c
"=========================================================================================="
";
printf %s "$t_Enter_option: ";
read rnavbar_reboot;
case $rnavbar_reboot in
 c|C) adb kill-server ; adb start-server ; if [[ $(adb devices | grep "device" -c) -gt "1" ]] ; then adb reboot ; else adb reboot ; fi ; clear ;;
 g|G) adb kill-server ; adb start-server ; if [[ $(adb devices | grep "device" -c) -gt "1" ]] ; then adb reboot recovery ; else adb reboot recovery ; fi ; clear ;;
 y|Y) adb kill-server ; adb start-server ; if [[ $(adb devices | grep "device" -c) -gt "1" ]] ; then adb reboot bootloader ; else adb reboot bootloader ; fi ; clear ;;
 k|K) adb kill-server ; adb start-server ; if [[ $(adb devices | grep "device" -c) -gt "1" ]] ; then adb reboot edl ; else adb reboot edl ; fi ; clear ;;
 *) clear;;
esac
}

navbar_reboot_fastboot() {
echo -e "
"=========================================================================================="
  C- $y$t_Reboot_normal$c
"=========================================================================================="
";
printf %s "$t_Enter_option: ";
read rnavbar_reboot_fastboot;
case $rnavbar_reboot_fastboot in
 c|C) fastboot $* reboot ; clear ;;
 *) clear;;
esac
}

workdir=$(pwd)
toolpath=$(readlink -f $0)
tooldir=$(dirname $toolpath)
bin=$(dirname $tooldir)
lang=$(cat $bin/language/config_lang.ini)
if [[ -f $bin/language/config_lang.ini ]]; then
	source $bin/language/"$lang"
	else
	source $bin/language/english-lang
fi
##############################################################################
clear
language() {
	cd $bin/language/
	#rm -f config_lang.ini
	echo
	echo "$t_Listing_file_lang"
	echo "------------------"
	PS3=$(echo ""; echo "$t_Choose: ")
	fileListLang1="$(find . -maxdepth 1 -type f | grep -i \\-lang$ | sed 's/ /ftemps/g' 2>/dev/null)";
	fileExit="$(echo -e $y$t_Cancel_operation$c)";
	fileListLang="$(echo $fileListLang1 $fileExit | sed -e 's/\.\///g' | sort -f)";

	if [[ -z $fileListLang ]] ; then
		clear
		echo ; echo "$t_Check_files" ; break
		return 1
	else
		select fileLang in $fileListLang; do
			if [[ -n "$fileLang" ]] ; then
				if [[ $fileLang == $fileExit ]]; then cd $workdir ; clear ; return 1 ; fi;
				fileLang=${fileLang%-*}
				if [[ $1 == "s1" ]]; then clear ; fi
				echo "$t_Selected $fileLang-lang"
				source $bin/language/$fileLang-lang
				find -iname $fileLang-lang | cut -d"-" -f1 > config_lang.ini
				sed -i 's/.\///g' config_lang.ini
				sed -i "s/$/-lang/g" config_lang.ini
				cd $workdir
				pause
				clear
				return 0
			else
		    	echo ; echo -e $r"$t_Error $t_wrong$c"
				cd $workdir
				pause
				clear
		    	return 1
		    fi
		done
	fi
}

pause()
{
read -s -n 1 -p "$t_Pause";
}

quit()
{
kill -9 $PPID;
clear;
exit;
}

# XIAOMI TOOLS
seltxiaomitgz() {
if [[ ! $(fastboot devices) ]] ; then clear ; poster ; echo -e $r"$t_Restart_phone_fastboot_mode!"$c ; pause ; clear ; poster ; navbar_reboot ; xiaomi_menu ; fi
sourcetgz=$(basename "$tooldir/XIAOMI-FILE")
	echo
	clear
	poster
if [[ $(adb devices) ]] ; then adb devices ; fi;
if [[ $(fastboot devices) ]] ; then fastboot devices ; fi;
	echo " "
	echo "$t_Listing_file tgz/zip: "
	echo "------------------"
	PS3=$(echo "------------------"; echo ""; echo "$t_Enter_option: ")
	fileListA="$(find $sourcetgz -maxdepth 1 -type f | grep -i \\.tgz$ | sed 's/ /ftemps/g' 2>/dev/null)";
	fileListB="$(find $sourcetgz -maxdepth 1 -type f | grep -i \\.zip$ | sed 's/ /ftemps/g' 2>/dev/null)";
	fileList1="$(echo $fileListA $fileListB)";
	fileExit="$(echo -e $y$t_Cancel_operation$c)";
	fileQuit="$(echo -e $r$t_Exit$c)";
	fileList="$(echo $fileList1 $fileExit $fileQuit | sed -e 's/\.\///g' | sort -f)";

	if [[ -z $fileList1 ]] ; then
		clear
		echo ; echo -e "$r TGZ/ZIP: $t_Check_files: XIAOMI-FILE$c" ; pause ; clear ; xiaomi_menu ; break
		return 1
	else
		select fileName in $fileList; do
			if [[ -n "$fileName" ]] ; then
				fileName=${fileName%.*}
				if [[ $1 == "s1" ]]; then clear ; fi
				if [[ $fileName == $fileExit ]]; then clear ; xiaomi_menu ; fi
				if [[ ! -f "$bin/start.cfg" ]] ; then
				if [[ $fileName == $fileQuit ]]; then clear ; quit ; fi
				else
				if [[ $fileName == $fileQuit ]]; then clear ; exit ; fi
				fi;

				if [[ -f $fileName.tgz ]] ; then rom_tgz ; fi
				if [[ -f $fileName.zip ]] ; then search_recovery ; fi #ricerca della twrp

			else
		    	echo ; echo -e $r"$t_Error $t_wrong$c"
				pause
				clear ;
				seltxiaomitgz
		    	return 1
			fi
		done
	fi
}

rom_tgz () {
	clear
	poster
	if [[ $(adb devices) ]] ; then adb devices ; fi;
	if [[ $(fastboot devices) ]] ; then fastboot devices ; fi;
	echo ; echo "$t_Your_selected_file $fileName.tgz" ;
	echo " " ;
	if [ ! -d "$sourcetgz/firmware_temp" ] ; then mkdir $sourcetgz/firmware_temp ; fi
	# Unpack tgz progress bar
	echo "$t_Please_wait..."
	echo -n "[="
	while :;do echo -n =;sleep 1;done &
	trap "kill $!" EXIT
	tar xzpf $fileName.tgz -C $sourcetgz/firmware_temp;
	kill $! && trap " " EXIT
	echo "] 100% $t_Unpack_complete"
	echo " "
	#pause
	clear
	seltxiaomish
	return 0
}

search_recovery() {
sourcerecimg=$(basename "$tooldir/XIAOMI-FILE")
	echo
	clear
	poster
if [[ $(adb devices) ]] ; then adb devices ; fi;
if [[ $(fastboot devices) ]] ; then fastboot devices ; fi;
	echo ; echo -e "$t_Your_selected_file $y $fileName.zip$c" ;
	echo " "
	echo "$t_Listing_file recovery.img: "
	echo "------------------"
	PS3=$(echo "------------------"; echo ""; echo "$t_Enter_option: ")
	fileListA="$(find $sourcerecimg | grep -i 'recovery' 2>/dev/null)";
	fileListB="$(find $sourcerecimg | grep -i 'twrp' 2>/dev/null)";
	fileList1="$(echo $fileListA $fileListB)";
	fileExit="$(echo -e $y$t_Cancel_operation$c)";
	fileQuit="$(echo -e $r$t_Exit$c)";
	fileList="$(echo $fileList1 $fileExit $fileQuit | sed -e 's/\.\///g' | sort -f)";
if [[ -z $fileList1 ]] ; then
		clear
		echo ; echo -e "$r recovery.img: $t_Check_files /XIAOMI-FILE/recovery.img$c" ; pause ; clear ; seltxiaomitgz ; break
		return 1
	else
		select fileNameTWRP in $fileList; do
			if [[ -n "$fileNameTWRP" ]] ; then
				fileNameTWRP=${fileNameTWRP%.*}
				if [[ $1 == "s1" ]]; then clear ; fi
				if [[ $fileNameTWRP == $fileExit ]]; then clear ; seltxiaomitgz ; fi
				if [[ ! -f "$bin/start.cfg" ]] ; then
				if [[ $fileNameTWRP == $fileQuit ]]; then clear ; quit ; fi
				else
				if [[ $fileNameTWRP == $fileQuit ]]; then clear ; exit ; fi
				fi;
					echo ; echo "$t_Your_selected_file $fileNameTWRP.img" ;
					if [ ! -d "$sourcetgz/firmware_temp" ] ; then mkdir $sourcetgz/firmware_temp ; mkdir $sourcetgz/firmware_temp/tmp ; mkdir $sourcetgz/firmware_temp/tmp/images ; fi
					cp $fileNameTWRP.img $sourcetgz/firmware_temp/tmp/images/recovery.img
					echo " "
					clear
					rom_zip # se trova la TWRP va in rom_zip
			else
		    	echo ; echo -e $r"$t_Error $t_wrong$c"
				pause
				clear ;
				seltxiaomitgz # se NON trova la TWRP ritorna al menÃ¹ dei files tgz/zip
		    	return 1
		    fi
		done
	fi
}

rom_zip () {
	clear
	poster
	if [[ $(adb devices) ]] ; then adb devices ; fi;
	if [[ $(fastboot devices) ]] ; then fastboot devices ; fi;
	echo ; echo "$t_Your_selected_file $fileName.zip" ;
	echo " " ;
	if [ ! -d "$sourcetgz/firmware_temp" ] ; then mkdir $sourcetgz/firmware_temp ; mkdir $sourcetgz/firmware_temp/tmp ; mkdir $sourcetgz/firmware_temp/tmp/images ; fi

##Unpack rom zip (con progress bar)
	echo "$t_Please_wait..."
	echo -n "[="
	while :;do echo -n =;sleep 2;done &
	trap "kill $!" EXIT

	#unpack del file .zip - verifica la presenza del file system.new.dat o del system.img
	unzip -qq $fileName.zip -d $sourcetgz/firmware_temp > /dev/null
		if [ ! -f "$sourcetgz/firmware_temp/system.new.dat" ] ; then
		if [ ! -f "$sourcetgz/firmware_temp/system.img" ] ; then
		kill $! && trap " " EXIT
		clear ; clear ;
		poster
		if [[ $(adb devices) ]] ; then adb devices ; fi;
		if [[ $(fastboot devices) ]] ; then fastboot devices ; fi;
		echo " "
		echo -e "$r ZIP $t_Not_supported$c" ;
		pause ; clear ; xiaomi_menu ;
		fi ;
		fi ;

	# se trattasi di sistem.new.dat scompatta il file .dat in system.img e poi da file ext4 in sparse file:
	if [[ -f $sourcetgz/firmware_temp/system.new.dat ]] ; then
	$bin/xiaomi_tools/sdat2img.py $sourcetgz/firmware_temp/system.transfer.list $sourcetgz/firmware_temp/system.new.dat $sourcetgz/firmware_temp/system1.img > /dev/null
	$bin/xiaomi_tools/ext2simg -v $sourcetgz/firmware_temp/system1.img $sourcetgz/firmware_temp/tmp/images/system.img > /dev/null
	mv $sourcetgz/firmware_temp/boot.* $sourcetgz/firmware_temp/tmp/images/
	rm -f $sourcetgz/firmware_temp/*.*
	fi

	# se trattasi di sistem.img trasforma il file da ext4 in parse file:
	if [[ -f $sourcetgz/firmware_temp/system.img ]] ; then
	$bin/xiaomi_tools/ext2simg -v $sourcetgz/firmware_temp/system.img $sourcetgz/firmware_temp/tmp/images/system.img > /dev/null
	mv $sourcetgz/firmware_temp/boot.* $sourcetgz/firmware_temp/tmp/images/
	rm -f $sourcetgz/firmware_temp/*.*
	fi

	kill $! && trap " " EXIT
	clear
	echo "] 100% $t_Unpack_complete"
##end-Unpack zip progress bar

	mv $sourcetgz/firmware_temp/firmware-update/* $sourcetgz/firmware_temp/tmp/images/
	cp -f $sourcetgz/firmware_temp/META-INF/com/google/android/updater-script $sourcetgz/firmware_temp/tmp/updater-script

##script flash_rom_zip.sh
	grep 'package_extract_file("firmware-update/' $sourcetgz/firmware_temp/tmp/updater-script > $sourcetgz/firmware_temp/tmp/flash_all00
	grep "\-update\/" $sourcetgz/firmware_temp/tmp/flash_all00 | cut -d"," -f1 > $sourcetgz/firmware_temp/tmp/flash_all11
	grep "\-update\/" $sourcetgz/firmware_temp/tmp/flash_all11 | cut -d"/" -f2 > $sourcetgz/firmware_temp/tmp/flash_all111 ; sed -i 's/"//g' $sourcetgz/firmware_temp/tmp/flash_all111
	sed -i "s/^/ICE0\/images\//g" $sourcetgz/firmware_temp/tmp/flash_all111 ;

	grep "name/" $sourcetgz/firmware_temp/tmp/flash_all00 | cut -d"," -f2 > $sourcetgz/firmware_temp/tmp/flash_all22 ; cut -d"-" -f2 $sourcetgz/firmware_temp/tmp/flash_all22 > $sourcetgz/firmware_temp/tmp/flash_all220
	grep "name/" $sourcetgz/firmware_temp/tmp/flash_all220 | cut -d"/" -f2 > $sourcetgz/firmware_temp/tmp/flash_all222 ; sed -i 's/");//g' $sourcetgz/firmware_temp/tmp/flash_all222
	sed -i "s/^/fastboot ICE1 flash /g" $sourcetgz/firmware_temp/tmp/flash_all222 ;

	paste $sourcetgz/firmware_temp/tmp/flash_all222 $sourcetgz/firmware_temp/tmp/flash_all111 > $sourcetgz/firmware_temp/tmp/flash_rom_zip.sh ; rm -rf $sourcetgz/firmware_temp/tmp/*flash_all2* ; rm -rf $sourcetgz/firmware_temp/tmp/*flash_all1* ; rm -rf $sourcetgz/firmware_temp/tmp/*flash_all0* ; rm -rf $sourcetgz/firmware_temp/tmp/updater-script
	echo "fastboot ICE1 flash boot ICE0/images/boot.img" >> $sourcetgz/firmware_temp/tmp/flash_rom_zip.sh
	echo "fastboot ICE1 flash recovery ICE0/images/recovery.img" >> $sourcetgz/firmware_temp/tmp/flash_rom_zip.sh
	echo "fastboot ICE1 flash system ICE0/images/system.img" >> $sourcetgz/firmware_temp/tmp/flash_rom_zip.sh

	#crea un file flash_rom_zip_erase_data.sh con wipe data e riavvio in modalitÃ  nornale
	cp $sourcetgz/firmware_temp/tmp/flash_rom_zip.sh $sourcetgz/firmware_temp/tmp/flash_rom_zip_erase_data.sh
	echo "fastboot ICE1 erase userdata" >> $sourcetgz/firmware_temp/tmp/flash_rom_zip_erase_data.sh
	echo "fastboot ICE1 reboot" >> $sourcetgz/firmware_temp/tmp/flash_rom_zip_erase_data.sh

	#aggiunge al file flash_rom_zip.sh il reboot in modalitÃ  twrp
	echo "fastboot ICE1 boot ICE0/images/recovery.img" >> $sourcetgz/firmware_temp/tmp/flash_rom_zip.sh

	sed -i 's/ICE0/\`dirname $0`/g' $sourcetgz/firmware_temp/tmp/flash_rom_zip.sh
	sed -i 's/ICE1/$*/g' $sourcetgz/firmware_temp/tmp/flash_rom_zip.sh
	chmod 775 $sourcetgz/firmware_temp/tmp/flash_rom_zip.sh
	sed -i 's/ICE0/\`dirname $0`/g' $sourcetgz/firmware_temp/tmp/flash_rom_zip_erase_data.sh
	sed -i 's/ICE1/$*/g' $sourcetgz/firmware_temp/tmp/flash_rom_zip_erase_data.sh
	chmod 775 $sourcetgz/firmware_temp/tmp/flash_rom_zip_erase_data.sh
##end-script flash_rom_zip.sh

	rm -r -d $sourcetgz/firmware_temp/firmware-update ; rm -r -d $sourcetgz/firmware_temp/META-INF
	echo " "
	clear
	if [[ ! -f $sourcetgz/firmware_temp/tmp/images/system.img ]] ; then clear ; poster ; echo -e "$r ZIP $t_Not_supported$c" ; pause ; clear ; xiaomi_menu ; else seltxiaomish ; fi;
	#seltxiaomish;
	return 0
	pause ;
}

seltxiaomish() {
sourcesh=$sourcetgz"/firmware_temp/*"
	echo
	clear
	poster
if [[ $(adb devices) ]] ; then adb devices ; fi;
if [[ $(fastboot devices) ]] ; then fastboot devices ; fi;
	echo " "
	if [[ -f $fileName.tgz ]] ; then echo "$t_Your_selected_file $fileName.tgz" ; fi
	if [[ -f $fileName.zip ]] ; then echo "$t_Your_selected_file $fileName.zip" ; fi

	echo " "
	echo "$t_Listing_file sh: "
	echo "------------------"
	PS3=$(echo "------------------"; echo ""; echo "$t_Enter_option: ")
	fileList1="$(find $sourcesh -maxdepth 1 -type f | grep -i \\.sh$ | sed 's/ /ftemps/g' 2>/dev/null)";
	fileExit="$(echo -e $y$t_Cancel_operation$c)";
	fileQuit="$(echo -e $r$t_Exit$c)";
	fileList="$(echo $fileList1 $fileExit $fileQuit | sed -e 's/\.\///g' | sort -f)";

	if [[ -z $fileList1 ]] ; then
		clear
		echo ; echo -e "$r SH: $t_Check_files /XIAOMI-FILE/$fileName/*.sh$c" ; pause ; clear ; xiaomi_menu ; break
		return 1
	else
		select fileName in $fileList; do
			if [[ -n "$fileName" ]] ; then
				fileName=${fileName%.*}
				if [[ $fileName == $fileExit ]]; then clear ; rm -d -r "$PWD/XIAOMI-FILE/firmware_temp" ; seltxiaomitgz ; fi
				if [[ ! -f "$bin/start.cfg" ]] ; then
				if [[ $fileName == $fileQuit ]]; then clear ; rm -d -r "$PWD/XIAOMI-FILE/firmware_temp" ; quit ; fi
				else
				if [[ $fileName == $fileQuit ]]; then clear ; rm -d -r "$PWD/XIAOMI-FILE/firmware_temp" ; exit ; fi
				fi;
				if [[ $1 == "s1" ]]; then clear ; fi
					echo ; echo "$t_Your_selected_file  $fileName.sh" ;
					$fileName.sh
					echo "$t_Done"
					if [ -d "$PWD/XIAOMI-FILE/firmware_temp" ] ; then rm -d -r "$PWD/XIAOMI-FILE/firmware_temp" ; fi;
					#pause
					clear
					fileName=""
					xiaomi_menu
					return 0
			else
		    	echo ; echo -e $r"$t_Error $t_wrong$c"
				pause
				clear ;
				seltxiaomish
		    	return 1
		    fi
		done
	fi
}

backup_partitions() {
if [[ $(adb devices | grep "device" -c) -gt "1" ]] ; then clear ; poster ; echo -e $r"$t_Restart_phone_twrp_mode!"$c ; pause ; clear ; poster ; navbar_reboot ; xiaomi_menu ; fi
if [[ $(adb devices | grep "recovery" -c) = "0" ]] ; then clear ; poster ; echo -e $r"$t_Pulling_error_device!"$c ; pause ; clear ; xiaomi_menu ; fi
if [[ $(fastboot devices) ]] ; then clear ; poster ; echo -e $r"$t_Restart_phone_twrp_mode!"$c ; pause ; clear ; poster ; navbar_reboot_fastboot ; xiaomi_menu ; fi
clear ;
poster ;
cp $bin/xiaomi_tools/backup_partitions.sh $PWD/XIAOMI-FILE ;
cd $PWD/XIAOMI-FILE ;
# Creates startup files
echo "adb shell mkdir /data/media/0/My_Images_Partitions" > push_backup_partitions.sh
echo "adb push ./backup_partitions.sh /data/media/0/My_Images_Partitions/backup_partitions.sh" >> push_backup_partitions.sh
echo "adb shell chmod 0755 /data/media/0/My_Images_Partitions/backup_partitions.sh" >> push_backup_partitions.sh
echo "adb shell /data/media/0/My_Images_Partitions/backup_partitions.sh" >> push_backup_partitions.sh
echo "adb shell rm -f /data/media/0/My_Images_Partitions/backup_partitions.sh" >> push_backup_partitions.sh
echo "adb pull /data/media/0/My_Images_Partitions ./My_Images_Partitions" >> push_backup_partitions.sh
echo "adb shell rm -r /data/media/0/My_Images_Partitions" >> push_backup_partitions.sh
chmod 755 push_backup_partitions.sh
./push_backup_partitions.sh ;
############################################################
clear ;
poster ;
echo -e $g "$t_Unplug_phone..." $c
echo -e $g "$t_Restart_phone_normal_use..." $c
echo "" ; echo -e $y "$t_Please_wait..." $c
cd My_Images_Partitions ;
tar -xvzf *.tgz > /dev/null
rm -rf *tgz
cd */images
cp $bin/xiaomi_tools/ext2simg ext2simgICEMAN
echo "find -size +520000k | cut -d"/" -f2 > iceman1.sh" > iceman0.sh
echo "find -size +520000k | cut -d"/" -f2 > iceman2.sh" >> iceman0.sh
chmod 755 iceman0.sh
./iceman0.sh
sed -i 's/^/mv /g' iceman1.sh
sed -i 's/.img/ICEMAN.img/g' iceman2.sh
paste iceman1.sh iceman2.sh > iceman3.sh
chmod 755 iceman3.sh
./iceman3.sh
sed -i 's/mv //g' iceman1.sh
sed -i 's/^/.\/ext2simgICEMAN -v /g' iceman2.sh
paste iceman2.sh iceman1.sh > iceman4.sh
chmod 755 iceman4.sh
./iceman4.sh > /dev/null
rm -rf *ICEMAN* ; rm -rf iceman*.sh ;
cd .. ; cd ..
ls -d * >> title
tar -cvzf $(cat title).tgz * ; rm -rf title
cd ..
############################################################
mv $PWD/My_Images_Partitions/*.tgz $PWD
rm -d $PWD/My_Images_Partitions
cd ..
rm -rf $PWD/XIAOMI-FILE/*backup_partitions.sh ;
clear ;
poster ;
if [[ $(adb devices) ]] ; then adb devices ; fi;
echo -e $g "$t_Done" $c
pause ;
xiaomi_menu;
}

help() {
gedit $bin/xiaomi_tools/README.txt
clear
xiaomi_menu
}

flash_recovery() {
if [[ ! $(fastboot devices) ]] ; then clear ; poster ; echo -e $r"$t_Restart_phone_fastboot_mode!"$c ; pause ; clear ; poster ; navbar_reboot ; xiaomi_menu ; fi
sourcerecimg=$(basename "$tooldir/XIAOMI-FILE")
	echo
	clear
	poster
if [[ $(adb devices) ]] ; then adb devices ; fi;
if [[ $(fastboot devices) ]] ; then fastboot devices ; fi;
	echo " "
	echo "$t_Listing_file recovery.img: "
	echo "------------------"
	PS3=$(echo "------------------"; echo ""; echo "$t_Enter_option: ")
	fileListA="$(find $sourcerecimg | grep -i 'recovery' 2>/dev/null)";
	fileListB="$(find $sourcerecimg | grep -i 'twrp' 2>/dev/null)";
	fileList1="$(echo $fileListA $fileListB)";
	fileExit="$(echo -e $y$t_Cancel_operation$c)";
	fileQuit="$(echo -e $r$t_Exit$c)";
	fileList="$(echo $fileList1 $fileExit $fileQuit | sed -e 's/\.\///g' | sort -f)";
if [[ -z $fileList1 ]] ; then
		clear
		echo ; echo -e "$r recovery.img: $t_Check_files /XIAOMI-FILE/recovery.img$c" ; pause ; clear ; xiaomi_menu ; break
		return 1
	else
		select fileName in $fileList; do
			if [[ -n "$fileName" ]] ; then
				fileName=${fileName%.*}
				if [[ $1 == "s1" ]]; then clear ; fi
				if [[ $fileName == $fileExit ]]; then clear ; xiaomi_menu ; fi
				if [[ ! -f "$bin/start.cfg" ]] ; then
				if [[ $fileName == $fileQuit ]]; then clear ; quit ; fi
				else
				if [[ $fileName == $fileQuit ]]; then clear ; exit ; fi
				fi;
					echo ; echo "$t_Your_selected_file $fileName.img" ;
					if [ ! -d "$sourcerecimg/firmware_temp" ] ; then mkdir $sourcerecimg/firmware_temp ; fi
					fastboot flash recovery $fileName.img
					fastboot boot $fileName.img
					echo " "
					#pause
					clear
					xiaomi_menu
					return 0
			else
		    	echo ; echo -e $r"$t_Error $t_wrong$c"
				pause
				clear ;
				flash_recovery
		    	return 1
		    fi
		done
	fi
}

flash_boot() {
if [[ ! $(fastboot devices) ]] ; then clear ; poster ; echo -e $r"$t_Restart_phone_fastboot_mode!"$c ; pause ; clear ; poster ; navbar_reboot ; xiaomi_menu ; fi
sourcebootimg=$(basename "$tooldir/XIAOMI-FILE")
	echo
	clear
	poster
if [[ $(adb devices) ]] ; then adb devices ; fi;
if [[ $(fastboot devices) ]] ; then fastboot devices ; fi;
	echo " "
	echo "$t_Listing_file boot.img: "
	echo "------------------"
	PS3=$(echo "------------------"; echo ""; echo "$t_Enter_option: ")
	fileList1="$(find $sourcebootimg | grep -i 'boot' 2>/dev/null)";
	fileExit="$(echo -e $y$t_Cancel_operation$c)";
	fileQuit="$(echo -e $r$t_Exit$c)";
	fileList="$(echo $fileList1 $fileExit $fileQuit | sed -e 's/\.\///g' | sort -f)";
if [[ -z $fileList1 ]] ; then
		clear
		echo ; echo -e "$r boot.img: $t_Check_files /XIAOMI-FILE/boot.img$c" ; pause ; clear ; xiaomi_menu ; break
		return 1
	else
		select fileName in $fileList; do
			if [[ -n "$fileName" ]] ; then
				fileName=${fileName%.*}
				if [[ $1 == "s1" ]]; then clear ; fi
				if [[ $fileName == $fileExit ]]; then clear ; xiaomi_menu ; fi
				if [[ ! -f "$bin/start.cfg" ]] ; then
				if [[ $fileName == $fileQuit ]]; then clear ; quit ; fi
				else
				if [[ $fileName == $fileQuit ]]; then clear ; exit ; fi
				fi;
					echo ; echo "$t_Your_selected_file $fileName.img" ;
					if [ ! -d "$sourcebootimg/firmware_temp" ] ; then mkdir $sourcebootimg/firmware_temp ; fi
					fastboot flash boot $fileName.img
					fastboot $* reboot
					echo " "
					#pause
					clear
					xiaomi_menu
					return 0
			else
		    	echo ; echo -e $r"$t_Error $t_wrong$c"
				pause
				clear ;
				flash_boot
		    	return 1
		    fi
		done
	fi
}

xiaomi_menu() {
poster
#echo -en "$t_Connected_devices: " ;
if [ ! -f ~/.xiaomi_tool ] ; then echo -e $r"$t_Setup_tool"$c ; pause ; $bin/xiaomi_tools/setup.cfg ; echo -e $g "$t_Done" $c ; pause ; clear ; xiaomi_menu ; fi
if [[ $(adb devices) ]] ; then adb devices ; fi;
if [[ $(fastboot devices) ]] ; then fastboot devices ; fi;
if [ ! -d "$PWD/XIAOMI-FILE" ] ; then mkdir XIAOMI-FILE && chmod a+w XIAOMI-FILE ; fi
if [ -d "$PWD/XIAOMI-FILE/firmware_temp" ] ; then rm -d -r "$PWD/XIAOMI-FILE/firmware_temp" ; fi;
echo -e "
"=========================================================================================="
  1 - FLASH firmware                       |  3 - Flash TWRP

  2 - BACKUP firmware                      |  4 - Flash boot.img
"=========================================================================================="
  99 - $y$t_Exit$c | H -$y Help$c | L - $y$t_Language$c | Z -$y $t_Restart_menu$c | W - Setup ADB/fastboot
"=========================================================================================="
";
printf %s "$t_Enter_option: ";
read rxiaomi;
case $rxiaomi in
 1) seltxiaomitgz;;
 2) backup_partitions;;
 3) flash_recovery;;
 4) flash_boot;;
 h|H) help;;
 l|L) language;;
 99|99) if [[ ! -f "$bin/start.cfg" ]] ; then quit ; else clear ; exit ; fi ; ;;
 w|W) $bin/xiaomi_tools/setup.cfg ; echo -e $g "$t_Done" $c ; pause ; clear ; xiaomi_menu;;
 z|Z) if [[ $(fastboot devices) ]] ; then clear ; poster ; navbar_reboot_fastboot ; xiaomi_menu ; else clear ; poster ; navbar_reboot ; xiaomi_menu ; fi;;
*) clear ; xiaomi_menu;;
esac
}
# end XIAOMI TOOLS
while :
do
	xiaomi_menu;
done
